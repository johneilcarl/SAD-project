<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        sQTCfP/+f7PjjiWYco5MAAAAAElFTkSuQmCC
</value>
  </data>
</root>